{"version":3,"file":"animations.d.ts","sources":["animations.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license Angular v12.1.2\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { AnimationBuilder } from '@angular/animations';\nimport { AnimationDriver } from '@angular/animations/browser';\nimport { AnimationFactory } from '@angular/animations';\nimport { AnimationMetadata } from '@angular/animations';\nimport { AnimationOptions } from '@angular/animations';\nimport { AnimationPlayer } from '@angular/animations';\nimport { InjectionToken } from '@angular/core';\nimport { ModuleWithProviders } from '@angular/core';\nimport { NgZone } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { Provider } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\nimport { RendererFactory2 } from '@angular/core';\nimport { RendererStyleFlags2 } from '@angular/core';\nimport { RendererType2 } from '@angular/core';\nimport { ɵAnimationEngine } from '@angular/animations/browser';\nimport { ɵAnimationStyleNormalizer } from '@angular/animations/browser';\nimport { ɵCssKeyframesDriver } from '@angular/animations/browser';\nimport { ɵDomRendererFactory2 } from '@angular/platform-browser';\nimport { ɵWebAnimationsDriver } from '@angular/animations/browser';\nimport { ɵWebAnimationsStyleNormalizer } from '@angular/animations/browser';\n\n/**\n * @publicApi\n */\nexport declare const ANIMATION_MODULE_TYPE: InjectionToken<\"NoopAnimations\" | \"BrowserAnimations\">;\n\n/**\n * Exports `BrowserModule` with additional [dependency-injection providers](guide/glossary#provider)\n * for use with animations. See [Animations](guide/animations).\n * @publicApi\n */\nexport declare class BrowserAnimationsModule {\n    /**\n     * Configures the module based on the specified object.\n     *\n     * @param config Object used to configure the behavior of the `BrowserAnimationsModule`.\n     * @see `BrowserAnimationsModuleConfig`\n     *\n     * @usageNotes\n     * When registering the `BrowserAnimationsModule`, you can use the `withConfig`\n     * function as follows:\n     * ```\n     * @NgModule({\n     *   imports: [BrowserAnimationsModule.withConfig(config)]\n     * })\n     * class MyNgModule {}\n     * ```\n     */\n    static withConfig(config: BrowserAnimationsModuleConfig): ModuleWithProviders<BrowserAnimationsModule>;\n}\n\n/**\n * Object used to configure the behavior of {@link BrowserAnimationsModule}\n * @publicApi\n */\nexport declare interface BrowserAnimationsModuleConfig {\n    /**\n     *  Whether animations should be disabled. Passing this is identical to providing the\n     * `NoopAnimationsModule`, but it can be controlled based on a runtime value.\n     */\n    disableAnimations?: boolean;\n}\n\n/**\n * A null player that must be imported to allow disabling of animations.\n * @publicApi\n */\nexport declare class NoopAnimationsModule {\n}\n\nexport declare function ɵangular_packages_platform_browser_animations_animations_a(): ɵWebAnimationsDriver | ɵCssKeyframesDriver;\n\nexport declare function ɵangular_packages_platform_browser_animations_animations_b(): ɵWebAnimationsStyleNormalizer;\n\nexport declare function ɵangular_packages_platform_browser_animations_animations_c(renderer: ɵDomRendererFactory2, engine: ɵAnimationEngine, zone: NgZone): ɵAnimationRendererFactory;\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nexport declare const ɵangular_packages_platform_browser_animations_animations_d: Provider[];\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nexport declare const ɵangular_packages_platform_browser_animations_animations_e: Provider[];\n\nexport declare class ɵangular_packages_platform_browser_animations_animations_f implements Renderer2 {\n    protected namespaceId: string;\n    delegate: Renderer2;\n    engine: ɵAnimationEngine;\n    constructor(namespaceId: string, delegate: Renderer2, engine: ɵAnimationEngine);\n    get data(): {\n        [key: string]: any;\n    };\n    destroyNode: ((n: any) => void) | null;\n    destroy(): void;\n    createElement(name: string, namespace?: string | null | undefined): any;\n    createComment(value: string): any;\n    createText(value: string): any;\n    appendChild(parent: any, newChild: any): void;\n    insertBefore(parent: any, newChild: any, refChild: any, isMove?: boolean): void;\n    removeChild(parent: any, oldChild: any, isHostElement: boolean): void;\n    selectRootElement(selectorOrNode: any, preserveContent?: boolean): any;\n    parentNode(node: any): any;\n    nextSibling(node: any): any;\n    setAttribute(el: any, name: string, value: string, namespace?: string | null | undefined): void;\n    removeAttribute(el: any, name: string, namespace?: string | null | undefined): void;\n    addClass(el: any, name: string): void;\n    removeClass(el: any, name: string): void;\n    setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2 | undefined): void;\n    removeStyle(el: any, style: string, flags?: RendererStyleFlags2 | undefined): void;\n    setProperty(el: any, name: string, value: any): void;\n    setValue(node: any, value: string): void;\n    listen(target: any, eventName: string, callback: (event: any) => boolean | void): () => void;\n    protected disableAnimations(element: any, value: boolean): void;\n}\n\nexport declare class ɵAnimationRenderer extends ɵangular_packages_platform_browser_animations_animations_f implements Renderer2 {\n    factory: ɵAnimationRendererFactory;\n    constructor(factory: ɵAnimationRendererFactory, namespaceId: string, delegate: Renderer2, engine: ɵAnimationEngine);\n    setProperty(el: any, name: string, value: any): void;\n    listen(target: 'window' | 'document' | 'body' | any, eventName: string, callback: (event: any) => any): () => void;\n}\n\nexport declare class ɵAnimationRendererFactory implements RendererFactory2 {\n    private delegate;\n    private engine;\n    private _zone;\n    private _currentId;\n    private _microtaskId;\n    private _animationCallbacksBuffer;\n    private _rendererCache;\n    private _cdRecurDepth;\n    private promise;\n    constructor(delegate: RendererFactory2, engine: ɵAnimationEngine, _zone: NgZone);\n    createRenderer(hostElement: any, type: RendererType2): Renderer2;\n    begin(): void;\n    private _scheduleCountTask;\n    end(): void;\n    whenRenderingDone(): Promise<any>;\n}\n\nexport declare class ɵBrowserAnimationBuilder extends AnimationBuilder {\n    private _nextAnimationId;\n    private _renderer;\n    constructor(rootRenderer: RendererFactory2, doc: any);\n    build(animation: AnimationMetadata | AnimationMetadata[]): AnimationFactory;\n}\n\nexport declare class ɵBrowserAnimationFactory extends AnimationFactory {\n    private _id;\n    private _renderer;\n    constructor(_id: string, _renderer: ɵAnimationRenderer);\n    create(element: any, options?: AnimationOptions): AnimationPlayer;\n}\n\nexport declare class ɵInjectableAnimationEngine extends ɵAnimationEngine implements OnDestroy {\n    constructor(doc: any, driver: AnimationDriver, normalizer: ɵAnimationStyleNormalizer);\n    ngOnDestroy(): void;\n}\n\nexport { }\n"]}